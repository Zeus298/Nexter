.gallery {
    background-color: $color-grey-light-1; 
    grid-column: full-start / full-end; 

    display: grid; 
    grid-template-columns: repeat(8, 1fr); 
    grid-template-rows: repeat(7, 5vw); //Vì img nên có độ phân giải -> khi tăng/giảm chiều rộng thì chiều cao thay đổi theo -> nên dùng view width 
    //Để khi thay đổi chiều rộng thì chiều cao sẽ thay đổi theo 
    //Cách 2 : Set cứng chiều dài cho cả grid --> grid-template-rows: repeat(7, 1fr) OK fine //

    grid-gap: 1.5rem;  

    padding: 1.5rem;
    
    & > * {
        width: 100% ;  
        height: 100%; // dặt <img> trong grid cell thì phải dùng object-fit vì nó có độ phân giải nên không vừa khít với grid cell mà ta quy định
        object-fit: cover ; // object-fit hoat dong khi set height + width = 100% của grid cell
        display: block; 
    }

    &__image {
        &-1 {
            grid-column:  1 / span 2; 
            grid-row: 1 / span 2;
        } 

        &-2 {
            grid-column: 3 / 6; 
            grid-row: 1 / 4;
        } 

        &-3 {
            grid-column: 6 / 7;
            grid-row: 1 / 3;
        } 

        &-4 {
            grid-column: 7 / 9;
            grid-row: 1 / 3;
        } 

        &-5 {
            grid-column: 1 / 3;
            grid-row: 3 / 6; 
        } 

        &-6 {
            grid-column: 3 / 5;
            grid-row: 4 / 6;
        } 

        &-7 {
            grid-column: 5 / 6;
            grid-row: 4 / 5;
        } 

        &-8 {
            grid-column: 6 / 8;
            grid-row: 3 / 5;
        } 

        &-9 {
            grid-column: 8 / 9;
            grid-row: 3 / 6;
        }

        &-10 {
            grid-column: 1 / 2;
            grid-row: 6 / 8;
        }

        &-11 {
            grid-column: 2 / 4;
            grid-row: 6 / 8;
        }

        &-12 {
            grid-column: 4 / 5;
            grid-row: 6 / 8; 
        }

        &-13 {
            grid-column: 5  / span 3;
            grid-row: 5 / span 3;
        }

        &-14 {
            grid-column: 8 / span  1;
            grid-row: 6 /span 2;
        }
    }



}                                       
